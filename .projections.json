{
  "*": {
    "start": "make start",
    "make": "make test",
    "dispatch": "make test"
  },

  "src/*.cljs": {
    "type": "src",
    "alternate": "test/{}_test.cljs",
    "make": "lein test {dot|hyphenate}-test",
    "dispatch": "lein test {dot|hyphenate}-test",
    "template": [
      "(ns {dot|hyphenate}",
      "  (:require",
      "    []",
      "    ))"
    ]
  },

  "src/brewsky/app/*/events.cljs": {
    "type": "event",
    "template": [
      "(ns brewsky.app.{dot|hyphenate}.events",
      "  (:require",
      "    [re-frame.core :refer [dispatch]]",
      "    ))",
      "",
      ";; Event Dispatchers",
      "",
      "(defn dispatch->store-derived-data",
      "  \"Dispatch a :{basename|hyphenate}/store-derived-data event.\"",
      "  [derived-value-to-store]",
      "  (dispatch [:{basename|hyphenate}/some-data derived-value-to-store]))",
      "",
      ";; Event Handlers",
      "",
      ";; IMPORTANT!!! Don't forget to map these events in brewsky/src/app/events.cljs",
      "",
      "(defn store-derived-data",
      "  \"Handles a :{basename|hyphenate}/store-derived-data event.",
      "  __ADDITIONAL DESCRIPTION__\"",
      "  [db [_ derived-value-to-store]]",
      "  (assoc db :some-data derived-value-to-store))",
      ""
    ]
  },

  "src/brewsky/app/*/styles.cljs": {
    "type": "styles",
    "template": [
      "(ns brewsky.app.{dot|hyphenate}.styles",
      "  (:require",
      "    [brewsky.app.ui :refer [colors]]",
      "    ))",
      "",
      "(def styles",
      "  {",
      "  })"
    ]
  },

  "src/brewsky/app/*/scene.cljs": {
    "type": "scene",
    "template": [
      "(ns brewsky.app.scenes.{dot|hyphenate}.scene",
      "  (:require",
      "    [brewsky.app.{dot|hyphenate}.events :refer [dispatch->REPLACE_ME]]",
      "    [brewsky.app.{dot|hyphenate}.styles :refer [styles]]",
      "    [brewsky.app.{dot|hyphenate}.subs :refer [subscription->REPLACE_ME]]",
      "    [brewsky.app.navigation.events :as navigation]",
      "    [brewsky.app.ui :as ui]",
      "    [brewsky.app.ui.components.label :as label]",
      "    [brewsky.app.ui.components.titled-container :as titled-container]",
      "    ))",
      "",
      ";; IMPORTANT!!! DELETE ME - Don't forget to map this scene in brewsky/src/app/scenes.cljs",
      "",
      "",
      "(defn back-button",
      "  \"Navigate to the prior screen\"",
      "  []",
      "  [ui/button",
      "    {open}:style (:back-button styles {open}{close})",
      "     :on-press #(navigation/dispatch->pop-scene){close}",
      "    \"Back\"])",
      "",
      "(defn title",
      "  \"Title for this scene\"",
      "  [text]",
      "  [ui/text",
      "    {:style (:title styles {open}{close})}",
      "    text])",
      "",
      "(defn component",
      "  \"TODO: Scene Description\"",
      "  []",
      "  [titled-container/component",
      "   {:title-bar {:title \"Scene Title\"}",
      "    :next-scene-button {:on-press #(navigation/dispatch->push-scene :colors)}}",
      "   [[ui/view",
      "     {:style (:center-panel styles {})}",
      "     [label/component",
      "      {:style (:label styles {})}",
      "      \"Scene: brewsky.app.scenes.{dot|hyphenate}\"]]]",
      "   ]",
      "  )"
    ]
  },

  "src/brewsky/app/*/subs.cljs": {
    "type": "sub",
    "template": [
      "(ns brewsky.app.{dot|hyphenate}.subs",
      "  (:require",
      "    [re-frame.core :refer [subscribe]]",
      "    ))",
      "",
      ";; Subscriptions",
      "",
      "(defn subscription->some-data",
      "  \"A ratom indicating __DESCRIPTION__\"",
      "  []",
      "  (subscribe [:{basename|hyphenate}/some-data]))",
      "",
      ";; Subscription Handlers",
      "",
      ";; IMPORTANT!!! Don't forget to map these subscribers in brewsky/src/app/subs.cljs",
      "",
      "(defn some-data",
      "  \"__QUERY DESCRIPTION__\"",
      "  [db _]",
      "  (:some-data db))",
      ""
    ]
  },

  "src/brewsky/app/ui/components/*.cljs": {
    "type": "sub",
    "template": [
      "(ns brewsky.app.ui.components.{dot|hyphenate}.subs",
      "  (:require",
      "    [brewsky.app.ui :as ui]",
      "    ))",
      "",
      "(def styles",
      "  {:label",
      "   {:color (:abbey ui/colors)",
      "    :font-size 20}})",
      "",
      "(defn component",
      "  \"TODO: Component description\"",
      "  [props text]",
      "  [ui/text {} \"Now What\"])"
    ]
  },

  "test/*_test.cljs": {
    "type": "test",
    "alternate": "{}.cljs",
    "make": "lein test {dot|hyphenate}-test",
    "dispatch": "lein test {dot|hyphenate}-test",
    "template": [
      "(ns {dot|hyphenate}-test",
      "  (:require",
      "    [cljs.test :refer [deftest is are testing]]",
      "    [{dot|hyphenate} :as {basename|hyphenate}]",
      "    ))",
      "",
      ";; IMPORTANT!!! DELETE ME - Don't forget to :require these tests in test/runners/doo.cljs",
      "",
      "(deftest a-test",
      "  (testing \"FIXME, I fail.\"",
      "    (is (= 1 0))))"
    ]
  }
}
