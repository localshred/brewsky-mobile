{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name rewrite-clj.node.comment, :imports nil, :requires {node rewrite-clj.node.protocols, rewrite-clj.node.protocols rewrite-clj.node.protocols}, :uses nil, :defs {CommentNode {:num-fields 1, :protocols #{cljs.core/IRecord rewrite-clj.node.comment/Object cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable rewrite-clj.node.protocols/Node cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name rewrite-clj.node.comment/CommentNode, :file ".cljs_rhino_repl/rewrite_clj/node/comment.cljs", :end-column 23, :type true, :column 12, :internal-ctor true, :line 6, :record true, :end-line 6, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->CommentNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/comment.cljs", :line 6, :column 12, :end-line 6, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([s]))}, :name rewrite-clj.node.comment/->CommentNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/comment.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, map->CommentNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/comment.cljs", :line 6, :column 12, :end-line 6, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__54856]))}, :name rewrite-clj.node.comment/map->CommentNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/comment.cljs", :end-column 23, :method-params ([G__54856]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__54856]))}, comment-node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/comment.cljs", :line 25, :column 7, :end-line 25, :end-column 19, :arglists (quote ([s])), :doc "Create node representing an EDN comment."}, :name rewrite-clj.node.comment/comment-node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/comment.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Create node representing an EDN comment."}, comment? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/comment.cljs", :line 30, :column 7, :end-line 30, :end-column 15, :arglists (quote ([node])), :doc "Check whether a node represents a comment."}, :name rewrite-clj.node.comment/comment?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/comment.cljs", :end-column 15, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node])), :doc "Check whether a node represents a comment."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:s :comment s}, :order [:s :comment s]}, :doc nil}