{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name rewrite-clj.node.token, :imports nil, :requires {node rewrite-clj.node.protocols, rewrite-clj.node.protocols rewrite-clj.node.protocols}, :uses nil, :defs {TokenNode {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection rewrite-clj.node.token/Object cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable rewrite-clj.node.protocols/Node cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name rewrite-clj.node.token/TokenNode, :file ".cljs_rhino_repl/rewrite_clj/node/token.cljs", :end-column 21, :type true, :column 12, :internal-ctor true, :line 6, :record true, :end-line 6, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->TokenNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/token.cljs", :line 6, :column 12, :end-line 6, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([value string-value]))}, :name rewrite-clj.node.token/->TokenNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/token.cljs", :end-column 21, :method-params ([value string-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value string-value]))}, map->TokenNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/token.cljs", :line 6, :column 12, :end-line 6, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__54954]))}, :name rewrite-clj.node.token/map->TokenNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/token.cljs", :end-column 21, :method-params ([G__54954]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__54954]))}, token-node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/token.cljs", :line 23, :column 7, :end-line 23, :end-column 17, :arglists (quote ([value] [value string-value])), :doc "Create node for an unspecified EDN token.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([value] [value string-value]), :arglists ([value] [value string-value]), :arglists-meta (nil nil)}}, :name rewrite-clj.node.token/token-node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/token.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([value] [value string-value]), :arglists ([value] [value string-value]), :arglists-meta (nil nil)}, :method-params ([value] [value string-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([value] [value string-value]), :doc "Create node for an unspecified EDN token."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:value value :string-value :token string-value}, :order [:value :string-value :token value string-value]}, :doc nil}