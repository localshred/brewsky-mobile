{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name rewrite-clj.node.reader-macro, :imports nil, :requires {node rewrite-clj.node.protocols, rewrite-clj.node.protocols rewrite-clj.node.protocols, ws rewrite-clj.node.whitespace, rewrite-clj.node.whitespace rewrite-clj.node.whitespace}, :uses nil, :defs {map->ReaderNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 7, :column 12, :end-line 7, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__54885]))}, :name rewrite-clj.node.reader-macro/map->ReaderNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 22, :method-params ([G__54885]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__54885]))}, ->node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 93, :column 8, :end-line 93, :end-column 14, :private true, :arglists (quote ([tag prefix suffix sexpr-fn sexpr-count children]))}, :private true, :name rewrite-clj.node.reader-macro/->node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 14, :method-params ([tag prefix suffix sexpr-fn sexpr-count children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 6, :fn-var true, :arglists (quote ([tag prefix suffix sexpr-fn sexpr-count children]))}, map->DerefNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 62, :column 12, :end-line 62, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__54901]))}, :name rewrite-clj.node.reader-macro/map->DerefNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 21, :method-params ([G__54901]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__54901]))}, var-node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 102, :column 7, :end-line 102, :end-column 15, :arglists (quote ([children])), :doc "Create node representing a var.\n   Takes either a seq of nodes or a single one."}, :name rewrite-clj.node.reader-macro/var-node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 15, :method-params ([children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([children])), :doc "Create node representing a var.\n   Takes either a seq of nodes or a single one."}, eval-node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 110, :column 7, :end-line 110, :end-column 16, :arglists (quote ([children])), :doc "Create node representing an inline evaluation. (`#=...`)\n   Takes either a seq of nodes or a single one."}, :name rewrite-clj.node.reader-macro/eval-node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 16, :method-params ([children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([children])), :doc "Create node representing an inline evaluation. (`#=...`)\n   Takes either a seq of nodes or a single one."}, deref-node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 128, :column 7, :end-line 128, :end-column 17, :arglists (quote ([children])), :doc "Create node representing the dereferencing of a form. (`@...`)\n   Takes either a seq of nodes or a single one."}, :name rewrite-clj.node.reader-macro/deref-node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 17, :method-params ([children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([children])), :doc "Create node representing the dereferencing of a form. (`@...`)\n   Takes either a seq of nodes or a single one."}, DerefNode {:num-fields 1, :protocols #{cljs.core/IRecord rewrite-clj.node.reader-macro/Object cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted rewrite-clj.node.protocols/InnerNode cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable rewrite-clj.node.protocols/Node cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name rewrite-clj.node.reader-macro/DerefNode, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 21, :type true, :column 12, :internal-ctor true, :line 62, :record true, :end-line 62, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->ReaderMacroNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 38, :column 12, :end-line 38, :end-column 27, :internal-ctor true, :factory :map, :arglists (quote ([G__54893]))}, :name rewrite-clj.node.reader-macro/map->ReaderMacroNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 27, :method-params ([G__54893]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__54893]))}, ->ReaderNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 7, :column 12, :end-line 7, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([tag prefix suffix sexpr-fn sexpr-count children]))}, :name rewrite-clj.node.reader-macro/->ReaderNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 22, :method-params ([tag prefix suffix sexpr-fn sexpr-count children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 6, :fn-var true, :arglists (quote ([tag prefix suffix sexpr-fn sexpr-count children]))}, ReaderMacroNode {:num-fields 1, :protocols #{cljs.core/IRecord rewrite-clj.node.reader-macro/Object cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted rewrite-clj.node.protocols/InnerNode cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable rewrite-clj.node.protocols/Node cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name rewrite-clj.node.reader-macro/ReaderMacroNode, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 27, :type true, :column 12, :internal-ctor true, :line 38, :record true, :end-line 38, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, reader-macro-node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 121, :column 7, :end-line 121, :end-column 24, :arglists (quote ([children] [macro-node form-node])), :doc "Create node representing a reader macro. (`#... ...`)", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([children] [macro-node form-node]), :arglists ([children] [macro-node form-node]), :arglists-meta (nil nil)}}, :name rewrite-clj.node.reader-macro/reader-macro-node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 24, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([children] [macro-node form-node]), :arglists ([children] [macro-node form-node]), :arglists-meta (nil nil)}, :method-params ([children] [macro-node form-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 2, :fn-var true, :arglists ([children] [macro-node form-node]), :doc "Create node representing a reader macro. (`#... ...`)"}, ->ReaderMacroNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 38, :column 12, :end-line 38, :end-column 27, :internal-ctor true, :factory :positional, :arglists (quote ([children]))}, :name rewrite-clj.node.reader-macro/->ReaderMacroNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 27, :method-params ([children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([children]))}, ->DerefNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :line 62, :column 12, :end-line 62, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([children]))}, :name rewrite-clj.node.reader-macro/->DerefNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 21, :method-params ([children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([children]))}, ReaderNode {:num-fields 6, :protocols #{cljs.core/IRecord rewrite-clj.node.reader-macro/Object cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted rewrite-clj.node.protocols/InnerNode cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable rewrite-clj.node.protocols/Node cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name rewrite-clj.node.reader-macro/ReaderNode, :file ".cljs_rhino_repl/rewrite_clj/node/reader_macro.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 7, :record true, :end-line 7, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{tag sexpr-fn :suffix :children eval :reader-macro suffix children :sexpr-count :prefix :var sexpr-count :deref prefix :tag read-string var quote :sexpr-fn deref :eval}, :order [:tag :prefix :suffix :sexpr-fn :sexpr-count :children tag prefix suffix sexpr-fn sexpr-count children :reader-macro read-string :deref deref :var var :eval eval quote]}, :doc nil}