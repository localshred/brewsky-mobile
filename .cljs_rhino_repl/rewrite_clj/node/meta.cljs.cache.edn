{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name rewrite-clj.node.meta, :imports nil, :requires {node rewrite-clj.node.protocols, rewrite-clj.node.protocols rewrite-clj.node.protocols, ws rewrite-clj.node.whitespace, rewrite-clj.node.whitespace rewrite-clj.node.whitespace}, :uses nil, :defs {MetaNode {:num-fields 3, :protocols #{cljs.core/IRecord rewrite-clj.node.meta/Object cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted rewrite-clj.node.protocols/InnerNode cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable rewrite-clj.node.protocols/Node cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name rewrite-clj.node.meta/MetaNode, :file ".cljs_rhino_repl/rewrite_clj/node/meta.cljs", :end-column 20, :type true, :column 12, :internal-ctor true, :line 7, :record true, :end-line 7, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->MetaNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/meta.cljs", :line 7, :column 12, :end-line 7, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([tag prefix children]))}, :name rewrite-clj.node.meta/->MetaNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/meta.cljs", :end-column 20, :method-params ([tag prefix children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tag prefix children]))}, map->MetaNode {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/meta.cljs", :line 7, :column 12, :end-line 7, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__54971]))}, :name rewrite-clj.node.meta/map->MetaNode, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/meta.cljs", :end-column 20, :method-params ([G__54971]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__54971]))}, meta-node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/meta.cljs", :line 37, :column 7, :end-line 37, :end-column 16, :arglists (quote ([children] [metadata data])), :doc "Create node representing a form and its metadata.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([children] [metadata data]), :arglists ([children] [metadata data]), :arglists-meta (nil nil)}}, :name rewrite-clj.node.meta/meta-node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/meta.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([children] [metadata data]), :arglists ([children] [metadata data]), :arglists-meta (nil nil)}, :method-params ([children] [metadata data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists ([children] [metadata data]), :doc "Create node representing a form and its metadata."}, raw-meta-node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/node/meta.cljs", :line 45, :column 7, :end-line 45, :end-column 20, :arglists (quote ([children] [metadata data])), :doc "Create node representing a form and its metadata using the\n   `#^` prefix.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([children] [metadata data]), :arglists ([children] [metadata data]), :arglists-meta (nil nil)}}, :name rewrite-clj.node.meta/raw-meta-node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/node/meta.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([children] [metadata data]), :arglists ([children] [metadata data]), :arglists-meta (nil nil)}, :method-params ([children] [metadata data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists ([children] [metadata data]), :doc "Create node representing a form and its metadata using the\n   `#^` prefix."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{tag :children :meta children :meta* :prefix prefix :tag}, :order [:tag :prefix :children tag prefix children :meta :meta*]}, :doc nil}