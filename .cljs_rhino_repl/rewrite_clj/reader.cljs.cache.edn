{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{peek next}, :name rewrite-clj.reader, :imports nil, :requires {r cljs.tools.reader, cljs.tools.reader cljs.tools.reader, reader-types cljs.tools.reader.reader-types, cljs.tools.reader.reader-types cljs.tools.reader.reader-types, cljs.tools.reader.impl.commons cljs.tools.reader.impl.commons, gstring goog.string, goog.string goog.string, nd rewrite-clj.node.protocols, rewrite-clj.node.protocols rewrite-clj.node.protocols}, :uses {parse-symbol cljs.tools.reader.impl.commons}, :defs {whitespace? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 36, :column 17, :end-line 36, :end-column 28, :tag boolean, :private true, :arglists (quote ([ch])), :doc "Checks whether a given character is whitespace"}, :private true, :name rewrite-clj.reader/whitespace?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 28, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :ret-tag boolean, :end-line 36, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([ch])), :doc "Checks whether a given character is whitespace"}, indexing-push-back-reader {:name rewrite-clj.reader/indexing-push-back-reader, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :line 14, :column 1, :end-line 14, :end-column 31, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 14, :column 6, :end-line 14, :end-column 31}}, peek {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 114, :column 7, :end-line 114, :end-column 11, :arglists (quote ([reader])), :doc "Peek next char."}, :name rewrite-clj.reader/peek, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 11, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader])), :doc "Peek next char."}, linebreak? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 42, :column 16, :end-line 42, :end-column 26, :tag boolean, :arglists (quote ([c])), :doc "Checks whether the character is a newline"}, :name rewrite-clj.reader/linebreak?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 26, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :ret-tag boolean, :end-line 42, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([c])), :doc "Checks whether the character is a newline"}, boundary? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 30, :column 7, :end-line 30, :end-column 16, :arglists (quote ([c])), :doc "Check whether a given char is a token boundary."}, :name rewrite-clj.reader/boundary?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 16, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Check whether a given char is a token boundary."}, reader-error {:name rewrite-clj.reader/reader-error, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :line 9, :column 1, :end-line 9, :end-column 18, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 9, :column 6, :end-line 9, :end-column 18}}, throw-reader {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 19, :column 7, :end-line 19, :end-column 19, :arglists (quote ([reader fmt & data])), :doc "Throw reader exception, including line/column.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(reader fmt data)], :arglists ([reader fmt & data]), :arglists-meta (nil)}}, :name rewrite-clj.reader/throw-reader, :variadic true, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(reader fmt data)], :arglists ([reader fmt & data]), :arglists-meta (nil)}, :method-params [(reader fmt data)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists ([reader fmt & data]), :doc "Throw reader exception, including line/column."}, unread {:name rewrite-clj.reader/unread, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :line 15, :column 1, :end-line 15, :end-column 12, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 15, :column 6, :end-line 15, :end-column 12}}, peek-char {:name rewrite-clj.reader/peek-char, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :line 13, :column 1, :end-line 13, :end-column 15, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 13, :column 6, :end-line 13, :end-column 15}}, buf {:name rewrite-clj.reader/buf, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :line 56, :column 1, :end-line 56, :end-column 9, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 56, :column 6, :end-line 56, :end-column 9}, :tag goog.string/StringBuffer}, whitespace-or-boundary? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 52, :column 16, :end-line 52, :end-column 39, :tag boolean, :arglists (quote ([c]))}, :name rewrite-clj.reader/whitespace-or-boundary?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 39, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :ret-tag boolean, :end-line 52, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([c]))}, read-include-linebreak {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 88, :column 7, :end-line 88, :end-column 29, :arglists (quote ([reader])), :doc "Read until linebreak and include it."}, :name rewrite-clj.reader/read-include-linebreak, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 29, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader])), :doc "Read until linebreak and include it."}, re-matches* {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 172, :column 8, :end-line 172, :end-column 19, :private true, :arglists (quote ([re s]))}, :private true, :name rewrite-clj.reader/re-matches*, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 19, :method-params ([re s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 2, :fn-var true, :arglists (quote ([re s]))}, read-char {:name rewrite-clj.reader/read-char, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :line 10, :column 1, :end-line 10, :end-column 15, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 10, :column 6, :end-line 10, :end-column 15}}, get-column-number {:name rewrite-clj.reader/get-column-number, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :line 11, :column 1, :end-line 11, :end-column 23, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 11, :column 6, :end-line 11, :end-column 23}}, read-while {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 58, :column 7, :end-line 58, :end-column 17, :arglists (quote ([reader p?] [reader p? eof?])), :doc "Read while the chars fulfill the given condition. Ignores\n  the unmatching char.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([reader p?] [reader p? eof?]), :arglists ([reader p?] [reader p? eof?]), :arglists-meta (nil nil)}}, :name rewrite-clj.reader/read-while, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([reader p?] [reader p? eof?]), :arglists ([reader p?] [reader p? eof?]), :arglists-meta (nil nil)}, :method-params ([reader p?] [reader p? eof?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 3, :fn-var true, :arglists ([reader p?] [reader p? eof?]), :doc "Read while the chars fulfill the given condition. Ignores\n  the unmatching char."}, ignore {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 102, :column 7, :end-line 102, :end-column 13, :arglists (quote ([reader])), :doc "Ignore the next character."}, :name rewrite-clj.reader/ignore, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 13, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader])), :doc "Ignore the next character."}, read-n {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 152, :column 7, :end-line 152, :end-column 13, :arglists (quote ([reader node-tag read-fn p? n])), :doc "Call the given function on the given reader until `n` values matching `p?` have been\n   collected."}, :name rewrite-clj.reader/read-n, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 13, :method-params ([reader node-tag read-fn p? n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 5, :fn-var true, :arglists (quote ([reader node-tag read-fn p? n])), :doc "Call the given function on the given reader until `n` values matching `p?` have been\n   collected."}, string->edn {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 97, :column 7, :end-line 97, :end-column 18, :arglists (quote ([s])), :doc "Convert string to EDN value."}, :name rewrite-clj.reader/string->edn, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Convert string to EDN value."}, read-until {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 79, :column 7, :end-line 79, :end-column 17, :arglists (quote ([reader p?])), :doc "Read until a char fulfills the given condition. Ignores the\n   matching char."}, :name rewrite-clj.reader/read-until, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 17, :method-params ([reader p?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader p?])), :doc "Read until a char fulfills the given condition. Ignores the\n   matching char."}, read-string {:name rewrite-clj.reader/read-string, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :line 16, :column 1, :end-line 16, :end-column 17, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 16, :column 6, :end-line 16, :end-column 17}}, next {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 109, :column 7, :end-line 109, :end-column 11, :arglists (quote ([reader])), :doc "Read next char."}, :name rewrite-clj.reader/next, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 11, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader])), :doc "Read next char."}, read-repeatedly {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 143, :column 7, :end-line 143, :end-column 22, :arglists (quote ([reader read-fn])), :doc "Call the given function on the given reader until it returns\n   a non-truthy value."}, :name rewrite-clj.reader/read-repeatedly, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 22, :method-params ([reader read-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader read-fn])), :doc "Call the given function on the given reader until it returns\n   a non-truthy value."}, read-keyword {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 181, :column 7, :end-line 181, :end-column 19, :arglists (quote ([reader initch]))}, :name rewrite-clj.reader/read-keyword, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 19, :method-params ([reader initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader initch]))}, space? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 47, :column 16, :end-line 47, :end-column 22, :tag boolean, :arglists (quote ([c])), :doc "Checks whether the character is a space"}, :name rewrite-clj.reader/space?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :ret-tag boolean, :end-line 47, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([c])), :doc "Checks whether the character is a space"}, get-line-number {:name rewrite-clj.reader/get-line-number, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :line 12, :column 1, :end-line 12, :end-column 21, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 12, :column 6, :end-line 12, :end-column 21}}, read-with-meta {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/reader.cljs", :line 122, :column 7, :end-line 122, :end-column 21, :arglists (quote ([reader read-fn])), :doc "Use the given function to read value, then attach row/col metadata."}, :name rewrite-clj.reader/read-with-meta, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/reader.cljs", :end-column 21, :method-params ([reader read-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader read-fn])), :doc "Use the given function to read value, then attach row/col metadata."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:end-row :col :end-col :row}, :order [:row :col :end-row :end-col]}, :doc nil}