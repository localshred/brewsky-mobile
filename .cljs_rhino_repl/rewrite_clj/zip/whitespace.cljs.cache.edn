{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name rewrite-clj.zip.whitespace, :imports nil, :requires {node rewrite-clj.node, rewrite-clj.node rewrite-clj.node, z clojure.zip, clojure.zip clojure.zip}, :uses nil, :defs {whitespace? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 7, :column 7, :end-line 7, :end-column 18, :arglists (quote ([zloc]))}, :name rewrite-clj.zip.whitespace/whitespace?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 18, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, linebreak? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 11, :column 7, :end-line 11, :end-column 17, :arglists (quote ([zloc]))}, :name rewrite-clj.zip.whitespace/linebreak?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 17, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, skip {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 32, :column 7, :end-line 32, :end-column 11, :arglists (quote ([f p? zloc])), :doc "Perform the given movement while the given predicate returns true."}, :name rewrite-clj.zip.whitespace/skip, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 11, :method-params ([f p? zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f p? zloc])), :doc "Perform the given movement while the given predicate returns true."}, prepend-space {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 54, :column 7, :end-line 54, :end-column 20, :arglists (quote ([zloc] [zloc n])), :doc "Prepend a whitespace node representing the given number of spaces (default: 1).", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [zloc n]), :arglists ([zloc] [zloc n]), :arglists-meta (nil nil)}}, :name rewrite-clj.zip.whitespace/prepend-space, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [zloc n]), :arglists ([zloc] [zloc n]), :arglists-meta (nil nil)}, :method-params ([zloc] [zloc n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists ([zloc] [zloc n]), :doc "Prepend a whitespace node representing the given number of spaces (default: 1)."}, append-newline {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 72, :column 7, :end-line 72, :end-column 21, :arglists (quote ([zloc] [zloc n])), :doc "Append a newline node representing the given number of newlines (default: 1).", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [zloc n]), :arglists ([zloc] [zloc n]), :arglists-meta (nil nil)}}, :name rewrite-clj.zip.whitespace/append-newline, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [zloc n]), :arglists ([zloc] [zloc n]), :arglists-meta (nil nil)}, :method-params ([zloc] [zloc n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists ([zloc] [zloc n]), :doc "Append a newline node representing the given number of newlines (default: 1)."}, prepend-newline {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 66, :column 7, :end-line 66, :end-column 22, :arglists (quote ([zloc] [zloc n])), :doc "Prepend a newlines node representing the given number of newlines (default: 1).", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [zloc n]), :arglists ([zloc] [zloc n]), :arglists-meta (nil nil)}}, :name rewrite-clj.zip.whitespace/prepend-newline, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [zloc n]), :arglists ([zloc] [zloc n]), :arglists-meta (nil nil)}, :method-params ([zloc] [zloc n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists ([zloc] [zloc n]), :doc "Prepend a newlines node representing the given number of newlines (default: 1)."}, append-space {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 60, :column 7, :end-line 60, :end-column 19, :arglists (quote ([zloc] [zloc n])), :doc "Append a whitespace node representing the given number of spaces (default: 1).", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [zloc n]), :arglists ([zloc] [zloc n]), :arglists-meta (nil nil)}}, :name rewrite-clj.zip.whitespace/append-space, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [zloc n]), :arglists ([zloc] [zloc n]), :arglists-meta (nil nil)}, :method-params ([zloc] [zloc n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists ([zloc] [zloc n]), :doc "Append a whitespace node representing the given number of spaces (default: 1)."}, skip-whitespace-left {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 47, :column 7, :end-line 47, :end-column 27, :arglists (quote ([zloc])), :doc "Move left until a non-whitespace/non-comment node is encountered."}, :name rewrite-clj.zip.whitespace/skip-whitespace-left, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 27, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc])), :doc "Move left until a non-whitespace/non-comment node is encountered."}, skip-whitespace {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([zloc] [f zloc])), :doc "Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [f zloc]), :arglists ([zloc] [f zloc]), :arglists-meta (nil nil)}}, :name rewrite-clj.zip.whitespace/skip-whitespace, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([zloc] [f zloc]), :arglists ([zloc] [f zloc]), :arglists-meta (nil nil)}, :method-params ([zloc] [f zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists ([zloc] [f zloc]), :doc "Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered."}, comment? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([zloc]))}, :name rewrite-clj.zip.whitespace/comment?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 15, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, whitespace-not-linebreak? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 19, :column 7, :end-line 19, :end-column 32, :arglists (quote ([zloc]))}, :name rewrite-clj.zip.whitespace/whitespace-not-linebreak?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 32, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, whitespace-or-comment? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :line 25, :column 7, :end-line 25, :end-column 29, :arglists (quote ([zloc]))}, :name rewrite-clj.zip.whitespace/whitespace-or-comment?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/zip/whitespace.cljs", :end-column 29, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}}, :require-macros nil, :doc nil}