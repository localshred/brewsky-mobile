{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rewrite-clj.parser.token, :imports nil, :requires {node rewrite-clj.node, rewrite-clj.node rewrite-clj.node, r rewrite-clj.reader, rewrite-clj.reader rewrite-clj.reader, gstring goog.string, goog.string goog.string}, :uses nil, :defs {join-2 {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/parser/token.cljs", :line 7, :column 8, :end-line 7, :end-column 14, :private true, :arglists (quote ([a b]))}, :private true, :name rewrite-clj.parser.token/join-2, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/parser/token.cljs", :end-column 14, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, allowed-default? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/parser/token.cljs", :line 10, :column 17, :end-line 10, :end-column 33, :tag boolean, :private true, :arglists (quote ([c]))}, :private true, :name rewrite-clj.parser.token/allowed-default?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/parser/token.cljs", :end-column 33, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :ret-tag boolean, :end-line 10, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([c]))}, allowed-suffix? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/parser/token.cljs", :line 13, :column 17, :end-line 13, :end-column 32, :tag boolean, :private true, :arglists (quote ([c]))}, :private true, :name rewrite-clj.parser.token/allowed-suffix?, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/parser/token.cljs", :end-column 32, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :ret-tag boolean, :end-line 13, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([c]))}, read-to-boundary {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/parser/token.cljs", :line 19, :column 8, :end-line 19, :end-column 24, :private true, :arglists (quote ([reader allowed?]))}, :private true, :name rewrite-clj.parser.token/read-to-boundary, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/parser/token.cljs", :end-column 24, :method-params ([reader allowed?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader allowed?]))}, read-to-char-boundary {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/parser/token.cljs", :line 29, :column 8, :end-line 29, :end-column 29, :private true, :arglists (quote ([reader]))}, :private true, :name rewrite-clj.parser.token/read-to-char-boundary, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/parser/token.cljs", :end-column 29, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader]))}, symbol-node {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/parser/token.cljs", :line 38, :column 8, :end-line 38, :end-column 19, :private true, :arglists (quote ([reader value value-string])), :doc "Symbols allow for certain boundary characters that have\n   to be handled explicitly."}, :private true, :name rewrite-clj.parser.token/symbol-node, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/parser/token.cljs", :end-column 19, :method-params ([reader value value-string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reader value value-string])), :doc "Symbols allow for certain boundary characters that have\n   to be handled explicitly."}, parse-token {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/rewrite_clj/parser/token.cljs", :line 55, :column 7, :end-line 55, :end-column 18, :arglists (quote ([reader])), :doc "Parse a single token."}, :name rewrite-clj.parser.token/parse-token, :variadic false, :file ".cljs_rhino_repl/rewrite_clj/parser/token.cljs", :end-column 18, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader])), :doc "Parse a single token."}}, :require-macros nil, :doc nil}