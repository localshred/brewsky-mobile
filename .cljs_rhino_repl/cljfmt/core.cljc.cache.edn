{:rename-macros {}, :renames {}, :externs {Error {}, RegExp {}}, :use-macros {skip rewrite-clj.zip.whitespace, append-space rewrite-clj.zip.whitespace, read-resource cljfmt.core, edn rewrite-clj.zip.base, whitespace-or-comment? rewrite-clj.zip.whitespace}, :excludes #{}, :name cljfmt.core, :imports nil, :requires {rewrite-clj.parser rewrite-clj.parser, clojure.zip clojure.zip, p rewrite-clj.parser, rewrite-clj.node rewrite-clj.node, rewrite-clj.zip rewrite-clj.zip, zb rewrite-clj.zip.base, n rewrite-clj.node, rewrite-clj.zip.whitespace rewrite-clj.zip.whitespace, zw rewrite-clj.zip.whitespace, z rewrite-clj.zip, str clojure.string, zip clojure.zip, clojure.string clojure.string, cljs.reader cljs.reader, reader cljs.reader, rewrite-clj.zip.base rewrite-clj.zip.base}, :uses {skip rewrite-clj.zip.whitespace, append-space rewrite-clj.zip.whitespace, edn rewrite-clj.zip.base, whitespace-or-comment? rewrite-clj.zip.whitespace}, :defs {indent-size {:name cljfmt.core/indent-size, :file ".cljs_rhino_repl/cljfmt/core.cljc", :line 163, :column 1, :end-line 163, :end-column 17, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 163, :column 6, :end-line 163, :end-column 17}, :tag number}, count-newlines {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 81, :column 8, :end-line 81, :end-column 22, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/count-newlines, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 22, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, whitespace? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 69, :column 8, :end-line 69, :end-column 19, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/whitespace?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 19, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, inner-indent {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 195, :column 8, :end-line 195, :end-column 20, :private true, :arglists (quote ([zloc key depth idx]))}, :private true, :name cljfmt.core/inner-indent, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 20, :method-params ([zloc key depth idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 4, :fn-var true, :arglists (quote ([zloc key depth idx]))}, missing-whitespace? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 63, :column 8, :end-line 63, :end-column 27, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/missing-whitespace?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 27, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, indent-amount {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 252, :column 8, :end-line 252, :end-column 21, :private true, :arglists (quote ([zloc indents]))}, :private true, :name cljfmt.core/indent-amount, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 21, :method-params ([zloc indents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zloc indents]))}, trailing-whitespace? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 282, :column 8, :end-line 282, :end-column 28, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/trailing-whitespace?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 28, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, replace-consecutive-blank-lines {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 96, :column 8, :end-line 96, :end-column 39, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/replace-consecutive-blank-lines, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 39, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, list-indent {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 158, :column 8, :end-line 158, :end-column 19, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/list-indent, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 19, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, indenter-fn {:name cljfmt.core/indenter-fn, :file ".cljs_rhino_repl/cljfmt/core.cljc", :line 226, :column 1, :end-line 226, :end-column 32, :private true, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 226, :column 21, :end-line 226, :end-column 32, :private true}, :tag cljs.core/MultiFn}, margin {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 143, :column 8, :end-line 143, :end-column 14, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/margin, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 14, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, indent-matches? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 177, :column 8, :end-line 177, :end-column 23, :private true, :arglists (quote ([key sym]))}, :private true, :name cljfmt.core/indent-matches?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 23, :method-params ([key sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key sym]))}, should-unindent? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 114, :column 8, :end-line 114, :end-column 24, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/should-unindent?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 24, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, last-line-in-string {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 140, :column 8, :end-line 140, :end-column 27, :private true, :arglists (quote ([s]))}, :private true, :name cljfmt.core/last-line-in-string, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 27, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, token-value {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 185, :column 8, :end-line 185, :end-column 19, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/token-value, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 19, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, root? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 276, :column 7, :end-line 276, :end-column 12, :arglists (quote ([zloc]))}, :name cljfmt.core/root?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 12, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, indent {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 264, :column 7, :end-line 264, :end-column 13, :arglists (quote ([form] [form indents])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([form] [form indents]), :arglists ([form] [form indents]), :arglists-meta (nil nil)}}, :name cljfmt.core/indent, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([form] [form indents]), :arglists ([form] [form indents]), :arglists-meta (nil nil)}, :method-params ([form] [form indents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 2, :fn-var true, :arglists ([form] [form indents])}, transform {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 43, :column 8, :end-line 43, :end-column 17, :private true, :arglists (quote ([form zf & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(form zf args)], :arglists ([form zf & args]), :arglists-meta (nil)}}, :private true, :name cljfmt.core/transform, :variadic true, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(form zf args)], :arglists ([form zf & args]), :arglists-meta (nil)}, :method-params [(form zf args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists ([form zf & args])}, form-symbol {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 188, :column 8, :end-line 188, :end-column 19, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/form-symbol, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 19, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, includes? {:name cljfmt.core/includes?, :file ".cljs_rhino_repl/cljfmt/core.cljc", :line 33, :column 1, :end-line 33, :end-column 15, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 33, :column 6, :end-line 33, :end-column 15}, :tag boolean}, edit-all {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 37, :column 8, :end-line 37, :end-column 16, :private true, :arglists (quote ([zloc p? f]))}, :private true, :name cljfmt.core/edit-all, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 16, :method-params ([zloc p? f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([zloc p? f]))}, reformat-form {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 289, :column 7, :end-line 289, :end-column 20, :arglists (quote ([form & [{:as opts}]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(form [{:as opts}])], :arglists ([form & [{:as opts}]]), :arglists-meta (nil)}}, :name cljfmt.core/reformat-form, :variadic true, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(form [{:as opts}])], :arglists ([form & [{:as opts}]]), :arglists-meta (nil)}, :method-params [(form [{:as opts}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 1, :fn-var true, :arglists ([form & [{:as opts}]])}, whitespace {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 146, :column 8, :end-line 146, :end-column 18, :private true, :arglists (quote ([width]))}, :private true, :name cljfmt.core/whitespace, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 18, :method-params ([width]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([width]))}, indent-order {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 238, :column 8, :end-line 238, :end-column 20, :private true, :arglists (quote ([[key _]]))}, :private true, :name cljfmt.core/indent-order, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 20, :method-params ([p__54332]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[key _]]))}, should-indent? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 111, :column 8, :end-line 111, :end-column 22, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/should-indent?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 22, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, block-indent {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 214, :column 8, :end-line 214, :end-column 20, :private true, :arglists (quote ([zloc key idx]))}, :private true, :name cljfmt.core/block-indent, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 20, :method-params ([zloc key idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 3, :fn-var true, :arglists (quote ([zloc key idx]))}, element? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 60, :column 8, :end-line 60, :end-column 16, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/element?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 16, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, line-break? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 75, :column 8, :end-line 75, :end-column 19, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/line-break?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 19, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, reformat-string {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 303, :column 7, :end-line 303, :end-column 22, :arglists (quote ([form-string & [options]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(form-string [options])], :arglists ([form-string & [options]]), :arglists-meta (nil)}}, :name cljfmt.core/reformat-string, :variadic true, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(form-string [options])], :arglists ([form-string & [options]]), :arglists-meta (nil)}, :method-params [(form-string [options])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 1, :fn-var true, :arglists ([form-string & [options]])}, make-indenter {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 235, :column 8, :end-line 235, :end-column 21, :private true, :arglists (quote ([[key opts]]))}, :private true, :name cljfmt.core/make-indenter, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 21, :method-params ([p__54325]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[key opts]]))}, zlinebreak? {:name cljfmt.core/zlinebreak?, :file ".cljs_rhino_repl/cljfmt/core.cljc", :line 30, :column 1, :end-line 30, :end-column 17, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 30, :column 6, :end-line 30, :end-column 17}}, surrounding? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 46, :column 8, :end-line 46, :end-column 20, :private true, :arglists (quote ([zloc p?]))}, :private true, :name cljfmt.core/surrounding?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 20, :method-params ([zloc p?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zloc p?]))}, pattern? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 173, :column 7, :end-line 173, :end-column 15, :arglists (quote ([v]))}, :name cljfmt.core/pattern?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, indent-line {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 258, :column 8, :end-line 258, :end-column 19, :private true, :arglists (quote ([zloc indents]))}, :private true, :name cljfmt.core/indent-line, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 19, :method-params ([zloc indents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zloc indents]))}, remove-consecutive-blank-lines {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 99, :column 7, :end-line 99, :end-column 37, :arglists (quote ([form]))}, :name cljfmt.core/remove-consecutive-blank-lines, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 37, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, zwhitespace? {:name cljfmt.core/zwhitespace?, :file ".cljs_rhino_repl/cljfmt/core.cljc", :line 27, :column 1, :end-line 27, :end-column 18, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 27, :column 6, :end-line 27, :end-column 18}}, remove-whitespace-and-newlines {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 91, :column 8, :end-line 91, :end-column 38, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/remove-whitespace-and-newlines, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 38, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, unindent {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 117, :column 7, :end-line 117, :end-column 15, :arglists (quote ([form]))}, :name cljfmt.core/unindent, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 15, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, custom-indent {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 243, :column 8, :end-line 243, :end-column 21, :private true, :arglists (quote ([zloc indents]))}, :private true, :name cljfmt.core/custom-indent, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 21, :method-params ([zloc indents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zloc indents]))}, top? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 50, :column 8, :end-line 50, :end-column 12, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/top?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 12, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, line-break-next? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 108, :column 8, :end-line 108, :end-column 24, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/line-break-next?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 24, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, remove-trailing-whitespace {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 286, :column 7, :end-line 286, :end-column 33, :arglists (quote ([form]))}, :name cljfmt.core/remove-trailing-whitespace, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 33, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, prior-line-string {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 126, :column 8, :end-line 126, :end-column 25, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/prior-line-string, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 25, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, remove-surrounding-whitespace {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 57, :column 7, :end-line 57, :end-column 36, :arglists (quote ([form]))}, :name cljfmt.core/remove-surrounding-whitespace, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 36, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, indent-width {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 165, :column 8, :end-line 165, :end-column 20, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/indent-width, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 20, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, index-matches-top-argument? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 191, :column 8, :end-line 191, :end-column 35, :private true, :arglists (quote ([zloc depth idx]))}, :private true, :name cljfmt.core/index-matches-top-argument?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 35, :method-params ([zloc depth idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 3, :fn-var true, :arglists (quote ([zloc depth idx]))}, final? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 279, :column 7, :end-line 279, :end-column 13, :arglists (quote ([zloc]))}, :name cljfmt.core/final?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 13, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, skip-whitespace {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 78, :column 8, :end-line 78, :end-column 23, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/skip-whitespace, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 23, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, comment? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 72, :column 8, :end-line 72, :end-column 16, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/comment?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 16, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, remove-namespace {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 170, :column 8, :end-line 170, :end-column 24, :private true, :arglists (quote ([x]))}, :private true, :name cljfmt.core/remove-namespace, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, start-element {:name cljfmt.core/start-element, :file ".cljs_rhino_repl/cljfmt/core.cljc", :line 120, :column 1, :end-line 120, :end-column 29, :private true, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 120, :column 16, :end-line 120, :end-column 29, :private true}, :tag cljs.core/IMap}, token? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 182, :column 8, :end-line 182, :end-column 14, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/token?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 14, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, first-form-in-line? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 207, :column 8, :end-line 207, :end-column 27, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/first-form-in-line?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 27, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, comment-next? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 105, :column 8, :end-line 105, :end-column 21, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/comment-next?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 21, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, default-indents {:name cljfmt.core/default-indents, :file ".cljs_rhino_repl/cljfmt/core.cljc", :line 221, :column 1, :end-line 221, :end-column 21, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 221, :column 6, :end-line 221, :end-column 21}, :tag any}, indentation? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 102, :column 8, :end-line 102, :end-column 20, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/indentation?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 20, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, surrounding-whitespace? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 53, :column 8, :end-line 53, :end-column 31, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/surrounding-whitespace?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 31, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, coll-indent {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 149, :column 8, :end-line 149, :end-column 19, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/coll-indent, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 19, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, index-of {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 152, :column 8, :end-line 152, :end-column 16, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/index-of, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 16, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, nth-form {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 202, :column 8, :end-line 202, :end-column 16, :private true, :arglists (quote ([zloc n]))}, :private true, :name cljfmt.core/nth-form, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 16, :method-params ([zloc n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zloc n]))}, consecutive-blank-line? {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 88, :column 8, :end-line 88, :end-column 31, :private true, :arglists (quote ([zloc]))}, :private true, :name cljfmt.core/consecutive-blank-line?, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 31, :method-params ([zloc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([zloc]))}, reindent {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 270, :column 7, :end-line 270, :end-column 15, :arglists (quote ([form] [form indents])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([form] [form indents]), :arglists ([form] [form indents]), :arglists-meta (nil nil)}}, :name cljfmt.core/reindent, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([form] [form indents]), :arglists ([form] [form indents]), :arglists-meta (nil nil)}, :method-params ([form] [form indents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 2, :fn-var true, :arglists ([form] [form indents])}, insert-missing-whitespace {:protocol-inline nil, :meta {:file "/code/src/apps/brewsky/.cljs_rhino_repl/cljfmt/core.cljc", :line 66, :column 7, :end-line 66, :end-column 32, :arglists (quote ([form]))}, :name cljfmt.core/insert-missing-whitespace, :variadic false, :file ".cljs_rhino_repl/cljfmt/core.cljc", :end-column 32, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}}, :require-macros {cljfmt.core cljfmt.core, reader cljs.reader, cljs.reader cljs.reader}, :cljs.analyzer/constants {:seen #{defroutes are PUT :remove-consecutive-blank-lines? when-first POST cond->> while try :block bound-fn :insert-missing-whitespace? :fn :meta :unquote-splicing :whitespace match :remove-trailing-whitespace? testing :reader-macro if-not doseq finally :unquote :default deftype when-let go if-some with-precision let defstruct :meta* doto future :uneval fn alt! do when-not when extend go-loop :vector defn if ns deftest extend-type :token :syntax-quote defmethod :inner struct-map extend-protocol let-routes cond-> DELETE dotimes reify with-open :list :var defonce :quote rfn defn- alt!! defprotocol :deref ANY letfn use-fixtures :indents :indentation? loop with-out-str condp cond for binding with-local-vars defmacro :remove-surrounding-whitespace? GET HEAD proxy with-redefs locking :set defmulti if-let case :hierarchy catch thread comment PATCH :map defrecord context when-some def OPTIONS :eval}, :order [:whitespace :fn :meta :unquote-splicing :reader-macro :unquote :meta* :uneval :vector :syntax-quote :list :var :quote :deref :set :map :eval :token are when-first cond->> while try bound-fn match testing if-not doseq finally deftype when-let go if-some with-precision let defstruct doto future fn alt! do when-not when extend go-loop defn if ns deftest extend-type defmethod struct-map extend-protocol cond-> dotimes reify with-open defonce defn- alt!! defprotocol letfn use-fixtures loop with-out-str condp cond for binding with-local-vars defmacro proxy with-redefs locking defmulti if-let case catch thread comment defrecord when-some def :block :inner defroutes PUT POST let-routes DELETE rfn ANY GET HEAD PATCH context OPTIONS :hierarchy :default :remove-consecutive-blank-lines? :remove-surrounding-whitespace? :insert-missing-whitespace? :indentation? :indents :remove-trailing-whitespace?]}, :doc nil}